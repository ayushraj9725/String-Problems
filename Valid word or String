problem statement : 

A word is considered valid if:
It contains a minimum of 3 characters.
It contains only digits (0-9), and English letters (uppercase and lowercase).
It includes at least one vowel.
It includes at least one consonant.
You are given a string word.

Return true if word is valid, otherwise, return false.

Notes:
'a', 'e', 'i', 'o', 'u', and their uppercases are vowels.
A consonant is an English letter that is not a vowel.
 

Example 1:
Input: word = "234Adas"
Output: true
Explanation: This word satisfies the conditions.

Example 2:
Input: word = "b3"
Output: false
Explanation: The length of this word is fewer than 3, and does not have a vowel.

Solutions 1 : Using Java 

class Solution {
    public static boolean isVowel(char ch) {
        return "AEIOUaeiou".indexOf(ch) != -1;
    }
    public void countVandC(String word, ArrayList<Integer> vc){
         int v = 0 , c = 0 ;
         for (char ch : word.toCharArray()) {
           if (Character.isLetter(ch)) {
             if (isVowel(ch)) v++;
             else c++;
           }
         }
         vc.add(v);
         vc.add(c);
    }
    public boolean isValid(String word) {
        
        int n = word.length();
        if(n < 3) return false ;
        ArrayList<Integer> vowelConst = new ArrayList<>();
        countVandC(word,vowelConst);
        int digits = 0 ;

        for(char ch : word.toCharArray()){
            if(ch == '@' || ch == '#' || ch == '$') return false ;
            if(Character.isDigit(ch)) digits++ ;
        }
        if(vowelConst.get(0) == 0 || vowelConst.get(1) == 0) return false ;

       return true ;
    }
}



Solution 2 : using c++ 

class Solution {
    public static boolean isVowel(char ch) {
        return "AEIOUaeiou".indexOf(ch) != -1;
    }
    public void countVandC(String word, ArrayList<Integer> vc){
       // ArrayList<Integer,Integer> vc = new ArrayList<>();
         int v = 0 , c = 0 ;
         for (char ch : word.toCharArray()) {
           if (Character.isLetter(ch)) {
             if (isVowel(ch)) v++;
             else c++;
           }
         }
         vc.add(v);
         vc.add(c);
    }
    public boolean isValid(String word) {
        
        int n = word.length();
        if(n < 3) return false ;
        ArrayList<Integer> vowelConst = new ArrayList<>();
        countVandC(word,vowelConst);
        int digits = 0 ;

        for(char ch : word.toCharArray()){
            if(ch == '@' || ch == '#' || ch == '$') return false ;
            if(Character.isDigit(ch)) digits++ ;
        }
        if(vowelConst.get(0) == 0 || vowelConst.get(1) == 0) return false ;

       return true ;
    }
}
